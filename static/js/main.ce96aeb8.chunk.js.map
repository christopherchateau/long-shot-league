{"version":3,"sources":["images/player.svg","images/todd.png","images/Chris.jpg","images/loading.gif","components/Header/index.js","components/PlayerInfo/index.js","components/Player/index.js","components/Standings/index.js","components/MainPage/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","toddImg","Component","PlayerInfo","_this$props","this","props","selectedPlayerData","handleBackClick","playerPics","Dan","Bmase","Scott","Kristin","Alex","Doherty","Kevin","Todd","Laura","Brent","Reed","Justin","Brewers","Matt","Fraske","Chris","name","points","bonus","total","teams","map","team","is_eliminated","key","concat","onClick","Player","rank","handlePlayerClick","Standings","players","playerListSorted","sort","b","loadingGif","loadingImg","counter","formattedPlayers","player","i","components_Player","Object","assign","length","MainPage","state","selectedPlayer","display","componentDidMount","_callee","playerList","teamList","regenerator_default","wrap","_context","prev","next","_this","getPlayers","sent","getTeams","loadPlayerData","stop","_callee2","response","data","_context2","fetch","json","abrupt","_callee3","_context3","forEach","filter","listTeam","drafted_by","generatePointTotal","getPlayerBonus","push","setState","reduce","find","bonus_points","_this$state","components_PlayerInfo","components_Standings","App","components_Header","components_MainPage","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce96aeb8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/player.f29f6e97.svg\";","module.exports = __webpack_public_path__ + \"static/media/todd.401918f0.png\";","module.exports = __webpack_public_path__ + \"static/media/Chris.63618149.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loading.a21746f5.gif\";","import React, { Component } from \"react\";\nimport toddImg from \"../../images/todd.png\";\nimport \"./Header.css\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"Header\">\n        <h1>\n          LONG SH\n          <img className=\"todd-img\" src={toddImg} />\n          T LEAGUE\n        </h1>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Dan from \"../../images/player.svg\";\nimport Bmase from \"../../images/player.svg\";\nimport Scott from \"../../images/player.svg\";\nimport Kristin from \"../../images/player.svg\";\nimport Alex from \"../../images/player.svg\";\nimport Doherty from \"../../images/player.svg\";\nimport Kevin from \"../../images/player.svg\";\nimport Todd from \"../../images/todd.png\";\nimport Laura from \"../../images/player.svg\";\nimport Brent from \"../../images/player.svg\";\nimport Reed from \"../../images/player.svg\";\nimport Justin from \"../../images/player.svg\";\nimport Brewers from \"../../images/player.svg\";\nimport Matt from \"../../images/player.svg\";\nimport Fraske from \"../../images/player.svg\";\nimport Chris from \"../../images/Chris.jpg\";\nimport \"./PlayerInfo.css\";\n\nclass PlayerInfo extends Component {\n  render() {\n    const { selectedPlayerData, handleBackClick } = this.props;\n    const playerPics = {\n      Dan,\n      Bmase,\n      Scott,\n      Kristin,\n      Alex,\n      Doherty,\n      Kevin,\n      Todd,\n      Laura,\n      Brent,\n      Reed,\n      Justin,\n      Brewers,\n      Matt,\n      Fraske,\n      Chris\n    };\n    return (\n      <div className=\"PlayerInfo\">\n        <h1 className=\"player-info-name\">{selectedPlayerData.name}</h1>\n        <img\n          className=\"player-info-pic\"\n          src={playerPics[selectedPlayerData.name]}\n        />\n        <div className=\"player-info-totals\">\n          <h5>\n            points\n            <br />{\" \"}\n            <span className=\"player-info-num\">{selectedPlayerData.points}</span>\n          </h5>\n          <h5>\n            bonus\n            <br />{\" \"}\n            <span className=\"player-info-num\">{selectedPlayerData.bonus}</span>\n          </h5>\n          <h5>\n            total\n            <br />{\" \"}\n            <span className=\"player-info-num\">{selectedPlayerData.total}</span>\n          </h5>\n        </div>\n        <div className=\"player-info-teams\">\n          {selectedPlayerData.teams.map(team => (\n            <h5\n              className={team.is_eliminated ? \"eliminated\" : \"\"}\n              key={team.name}\n            >\n              {`${team.name} (${team.points})`}\n            </h5>\n          ))}\n        </div>\n        <button className=\"back-btn\" onClick={handleBackClick}>\n          standings\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default PlayerInfo;\n","import React, { Component } from \"react\";\nimport Dan from \"../../images/player.svg\";\nimport Bmase from \"../../images/player.svg\";\nimport Scott from \"../../images/player.svg\";\nimport Kristin from \"../../images/player.svg\";\nimport Alex from \"../../images/player.svg\";\nimport Doherty from \"../../images/player.svg\";\nimport Kevin from \"../../images/player.svg\";\nimport Todd from \"../../images/todd.png\";\nimport Laura from \"../../images/player.svg\";\nimport Brent from \"../../images/player.svg\";\nimport Reed from \"../../images/player.svg\";\nimport Justin from \"../../images/player.svg\";\nimport Brewers from \"../../images/player.svg\";\nimport Matt from \"../../images/player.svg\";\nimport Fraske from \"../../images/player.svg\";\nimport Chris from \"../../images/Chris.jpg\";\nimport \"./Player.css\";\n\nclass Player extends Component {\n  render() {\n    const { name, total, rank, handlePlayerClick } = this.props;\n    const playerPics = {\n      Dan,\n      Bmase,\n      Scott,\n      Kristin,\n      Alex,\n      Doherty,\n      Kevin,\n      Todd,\n      Laura,\n      Brent,\n      Reed,\n      Justin,\n      Brewers,\n      Matt,\n      Fraske,\n      Chris\n    };\n    \n    return (\n      <div className=\"Player\" onClick={() => handlePlayerClick(name)}>\n        <h3 className=\"player-rank\">{rank}</h3>\n        <h3 className=\"player-name\">{name}</h3>\n        <h3 className=\"player-points\">{total}</h3>\n        <div className=\"player-pic-wrapper\">\n          <img className=\"player-pic\" src={playerPics[name]} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Player;\n","import React, { Component } from \"react\";\nimport Player from \"../Player\";\nimport loadingImg from \"../../images/loading.gif\";\nimport \"./Standings.css\";\n\nclass Standings extends Component {\n  render() {\n    const { players, handlePlayerClick } = this.props;\n\n    const playerListSorted = players.sort((a, b) => {\n      if (a.total > b.total) return -1;\n      if (a.total < b.total) return 1;\n    });\n\n    const loadingGif = <img className=\"loading-img\" src={loadingImg} />;\n\n    let counter = 1;\n    const formattedPlayers = playerListSorted.map((player, i) => {\n      i > 0 && player.total === playerListSorted[i - 1].total\n        ? counter++\n        : (counter = 0);\n\n      return (\n        <Player\n          handlePlayerClick={handlePlayerClick}\n          {...player}\n          rank={i + 1 - counter}\n          key={player.name}\n        />\n      );\n    });\n\n    if (players.length) {\n      return (\n        <div className=\"Standings\">\n          <div className=\"current-standings-header\">\n            <h5>rank</h5>\n            <h5>name</h5>\n            <h5 className=\"current-standings-points\">points</h5>\n          </div>\n          {formattedPlayers}\n        </div>\n      );\n    } else {\n      return loadingGif;\n    }\n  }\n}\n\nexport default Standings;\n","import React, { Component } from \"react\";\nimport PlayerInfo from \"../PlayerInfo\";\nimport Standings from \"../Standings\";\nimport \"./MainPage.css\";\n\nclass MainPage extends Component {\n  state = {\n    selectedPlayer: \"\",\n    display: \"standings\",\n    players: []\n  };\n\n  componentDidMount = async () => {\n    const playerList = await this.getPlayers();\n    const teamList = await this.getTeams();\n    await this.loadPlayerData(playerList, teamList);\n  };\n\n  getPlayers = async () => {\n    const response = await fetch(\n      \"https://long-shot-league-be.herokuapp.com/api/v1/longshotleague/players\"\n    );\n    const data = await response.json();\n    return data;\n  };\n\n  getTeams = async () => {\n    const response = await fetch(\n      \"https://long-shot-league-be.herokuapp.com/api/v1/longshotleague/teams\"\n    );\n    const data = await response.json();\n    return data;\n  };\n\n  loadPlayerData = (playerList, teamList) => {\n    const players = [];\n\n    playerList.forEach(player => {\n      const teams = teamList.filter(\n        listTeam => listTeam.drafted_by === player.name\n      );\n      const points = this.generatePointTotal(teams);\n      const bonus = this.getPlayerBonus(playerList, player.name);\n      const total = points + bonus;\n\n      players.push({\n        name: player.name,\n        teams,\n        points,\n        bonus,\n        total\n      });\n    });\n    this.setState({ players });\n  };\n\n  generatePointTotal = teams => teams.reduce((a, b) => a + b.points, 0);\n\n  getPlayerBonus = (playerList, name) =>\n    +playerList.find(player => player.name === name).bonus_points;\n\n  handlePlayerClick = selectedPlayer => {\n    this.setState({ selectedPlayer, display: \"player info\" });\n  };\n\n  handleBackClick = () => {\n    this.setState({ selectedPlayer: \"\", display: \"standings\" });\n  };\n\n  render() {\n    const { display, selectedPlayer, players } = this.state;\n    const selectedPlayerData = players.find(\n      player => player.name === selectedPlayer\n    );\n    return (\n      <div className=\"MainPage\">\n        {display === \"player info\" && (\n          <PlayerInfo\n            selectedPlayerData={selectedPlayerData}\n            handleBackClick={this.handleBackClick}\n          />\n        )}\n        {display === \"standings\" && (\n          <Standings\n            players={players}\n            handlePlayerClick={this.handlePlayerClick}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","import React, { Component } from \"react\";\nimport Header from \"../Header/\";\nimport MainPage from \"../MainPage/\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <MainPage />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}