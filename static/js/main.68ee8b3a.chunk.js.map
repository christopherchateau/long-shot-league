{"version":3,"sources":["images/player.svg","images/todd.png","images/loading.gif","images/Chris.jpg","components/Header/index.js","components/PlayerInfo/index.js","components/Player/index.js","components/Standings/index.js","components/Teams/index.js","components/Bonus/index.js","components/BonusPage/index.js","apiCalls/index.js","components/MainPage/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","handleNavBarClick","this","props","react_default","a","createElement","className","src","toddImg","onClick","Component","PlayerInfo","_this$props","selectedPlayerData","handleBackClick","playerPics","Dan","Bmase","Scott","Kristin","Alex","Doherty","Kevin","Todd","Laura","Brent","Reed","Justin","Brewers","Matt","Fraske","Chris","bonusList","bonusData","map","bonus","key","description","points","length","name","bonusTotal","pointTotal","teams","team","is_eliminated","concat","Player","rank","handlePlayerClick","Standings","players","playerListSorted","sort","b","loadingGif","loadingImg","counter","formattedPlayers","player","i","components_Player","Object","assign","Teams","state","display","toggleTeamDisplay","_this","setState","teamList","filter","drafted_by","Bonus","BonusPage","playersDisplayed","bonusListDisplayed","playerBonusTotal","reduce","total","push","components_Bonus","id","getPlayers","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","arguments","getTeams","_ref2","_callee2","_context2","getBonusData","_ref3","_callee3","_context3","MainPage","selectedPlayer","standingsDisplay","componentDidMount","playerList","loadPlayerData","forEach","listTeam","generatePointTotal","generateBonusData","generateBonusTotal","sortByName","input","pageDisplay","_this$state","find","components_PlayerInfo","components_Standings","components_Teams","components_BonusPage","App","components_Header","components_MainPage","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qYCyCzBC,0LApCJ,IACCC,EAAsBC,KAAKC,MAA3BF,kBACR,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,oBAEEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWC,IAAKC,MAFjC,aAMFL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,MACEC,UAAU,kBACVG,QAAS,kBAAMT,EAAkB,eAFnC,aAMAG,EAAAC,EAAAC,cAAA,MACEC,UAAU,kBACVG,QAAS,kBAAMT,EAAkB,WAFnC,SAMAG,EAAAC,EAAAC,cAAA,MACEC,UAAU,kBACVG,QAAS,kBAAMT,EAAkB,WAFnC,kBAzBWU,uECiGNC,0LAjFJ,IAAAC,EACyCX,KAAKC,MAA7CW,EADDD,EACCC,mBAAoBC,EADrBF,EACqBE,gBACtBC,EAAa,CACjBC,QACAC,UACAC,UACAC,YACAC,SACAC,YACAC,UACAC,SACAC,UACAC,UACAC,SACAC,WACAC,YACAC,SACAC,WACAC,WAGEC,EAAYnB,EAAmBoB,UAAUC,IAAI,SAAAC,GAAK,OACpDhC,EAAAC,EAAAC,cAAA,MAAI+B,IAAKD,EAAME,aACZF,EAAMG,OADT,MACoBH,EAAME,eAQ5B,OAJKL,EAAUO,SACbP,EAAY,UAIZ7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,WAAWG,QAASK,GAAtC,KAGAX,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAoBO,EAAmB2B,MACrDrC,EAAAC,EAAAC,cAAA,OACEC,UAAU,kBACVC,IAAKQ,EAAWF,EAAmB2B,QAErCrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,mBAEEF,EAAAC,EAAAC,cAAA,WAAO,IACPF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAmBO,EAAmByB,SAExDnC,EAAAC,EAAAC,cAAA,kBAEEF,EAAAC,EAAAC,cAAA,WAAO,IACPF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBACbO,EAAmB4B,aAGxBtC,EAAAC,EAAAC,cAAA,kBAEEF,EAAAC,EAAAC,cAAA,WAAO,IACPF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBACbO,EAAmB6B,cAI1BvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACZO,EAAmB8B,MAAMT,IAAI,SAAAU,GAAI,OAChCzC,EAAAC,EAAAC,cAAA,MACEC,UAAWsC,EAAKC,cAAgB,aAAe,GAC/CT,IAAKQ,EAAKJ,MAFZ,GAAAM,OAIMF,EAAKJ,KAJX,MAAAM,OAIoBF,EAAKN,OAJzB,SAQJnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,SACC0B,WA3EctB,cCmCVqC,0LAlCJ,IAAAnC,EAC+CX,KAAKC,MAAnDsC,EADD5B,EACC4B,KAAME,EADP9B,EACO8B,WAAYM,EADnBpC,EACmBoC,KAAMC,EADzBrC,EACyBqC,kBAC1BlC,EAAa,CACjBC,QACAC,UACAC,UACAC,YACAC,SACAC,YACAC,UACAC,SACAC,UACAC,UACAC,SACAC,WACAC,YACAC,SACAC,WACAC,WAGF,OACE5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASG,QAAS,kBAAMwC,EAAkBT,KACvDrC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAe0C,GAC7B7C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAekC,GAC7BrC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAiBoC,GAC/BvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaC,IAAKQ,EAAWyB,cA5BjC9B,8BC8BNwC,0LA3CJ,IAAAtC,EACgCX,KAAKC,MAApCiD,EADDvC,EACCuC,QAASF,EADVrC,EACUqC,kBAEXG,EAAmBD,EAAQE,KAAK,SAACjD,EAAGkD,GACxC,OAAIlD,EAAEsC,WAAaY,EAAEZ,YAAoB,EACrCtC,EAAEsC,WAAaY,EAAEZ,WAAmB,OAAxC,IAGIa,EAAapD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcC,IAAKiD,MAEjDC,EAAU,EACRC,EAAmBN,EAAiBlB,IAAI,SAACyB,EAAQC,GAKrD,OAJAA,EAAI,GAAKD,EAAOjB,aAAeU,EAAiBQ,EAAI,GAAGlB,WACnDe,IACCA,EAAU,EAGbtD,EAAAC,EAAAC,cAACwD,EAADC,OAAAC,OAAA,CACEd,kBAAmBA,GACfU,EAFN,CAGEX,KAAMY,EAAI,EAAIH,EACdrB,IAAKuB,EAAOnB,UAKlB,OAAKW,EAAQZ,OAITpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,4BAAd,WAEDoD,GATEH,SA5BW7C,cC+CTsD,oNA/CbC,MAAQ,CACNC,QAAS,cAGXC,kBAAoB,WAAM,IAClBD,EAAYE,EAAKH,MAAjBC,QACoBA,EAAd,aAAZA,EAAoC,cAA4B,WAChEE,EAAKC,SAAS,CAAEH,qFAGT,IACDI,EAAarE,KAAKC,MAAlBoE,SACEJ,EAAYjE,KAAKgE,MAAjBC,QACFX,EAAapD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcC,IAAKiD,MAErC,gBAAZU,IACFI,EAAWA,EAASC,OAAO,SAAA3B,GAAI,OAAKA,EAAKC,iBAG3C,IAAMF,EAAQ2B,EAASpC,IAAI,SAAAU,GAAI,OAC7BzC,EAAAC,EAAAC,cAAA,OACEC,UAAW,OAAOwC,OAAOF,EAAKC,cAAgB,OAAS,UACvDT,IAAKQ,EAAKJ,MAEVrC,EAAAC,EAAAC,cAAA,UACGuC,EAAKJ,KADR,MACiBI,EAAKN,QAEtBnC,EAAAC,EAAAC,cAAA,UAAKuC,EAAK4B,eAId,OAAKF,EAAS/B,OAIVpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAmBG,QAASR,KAAKkE,mBAChDD,GAEH/D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBqC,GALlC,KAHKY,SAjCO7C,cCUL+D,0LAVJ,IACCzC,EAAc/B,KAAKC,MAAnB8B,UACR,OACE7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,aAAAyC,OAAQd,EAAUK,YAAlB,MAAAS,OAAkCd,EAAUM,OAA5C,gBALY5B,cCmCLgE,0LAhCJ,IAAA9D,EACwBX,KAAKC,MAA5BiD,EADDvC,EACCuC,QAASnB,EADVpB,EACUoB,UACXuB,EAAapD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcC,IAAKiD,MAE/CmB,EAAmBxB,EAAQjB,IAAI,SAAAyB,GACnC,IAAMiB,EAAqB,GAErBC,EAAmB7C,EAAU8C,OAAO,SAACC,EAAO5C,GAKhD,OAJIA,EAAMK,OAASmB,EAAOnB,OACxBoC,EAAmBI,KAAK7E,EAAAC,EAAAC,cAAC4E,EAAD,CAAOjD,UAAWG,EAAOC,IAAKD,EAAM+C,MAC5DH,GAAS5C,EAAMG,SAETyC,GACP,GACH,OACE5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe8B,IAAKuB,EAAOnB,MACxCrC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,GAAAwC,OACEa,EAAOnB,KADT,OAAAM,OAEM+B,IACN1E,EAAAC,EAAAC,cAAA,WAAMuE,MAKZ,OAAKzB,EAAQZ,OAGJpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaqE,GAF5BpB,SA1BW7C,cCLXyE,EAAU,eAAAC,EAAAtB,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAlF,EAAAmF,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAlF,EAAAuF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACDC,MACrB,2EAFsB,cAClBN,EADkBG,EAAAI,KAAAJ,EAAAE,KAAA,EAILL,EAASQ,OAJJ,cAIlBP,EAJkBE,EAAAI,KAAAJ,EAAAM,OAAA,SAKjBR,GALiB,wBAAAE,EAAAO,SAAAX,MAAH,yBAAAJ,EAAAgB,MAAAnG,KAAAoG,YAAA,GAQVC,EAAQ,eAAAC,EAAAzC,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAlF,EAAAmF,KAAG,SAAAiB,IAAA,IAAAf,EAAAC,EAAA,OAAAJ,EAAAlF,EAAAuF,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAX,KAAA,EACCC,MACrB,yEAFoB,cAChBN,EADgBgB,EAAAT,KAAAS,EAAAX,KAAA,EAIHL,EAASQ,OAJN,cAIhBP,EAJgBe,EAAAT,KAAAS,EAAAP,OAAA,SAKfR,GALe,wBAAAe,EAAAN,SAAAK,MAAH,yBAAAD,EAAAH,MAAAnG,KAAAoG,YAAA,GAQRK,EAAY,eAAAC,EAAA7C,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAlF,EAAAmF,KAAG,SAAAqB,IAAA,IAAAnB,EAAAxD,EAAA,OAAAqD,EAAAlF,EAAAuF,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAf,KAAA,EACHC,MACrB,yEAFwB,cACpBN,EADoBoB,EAAAb,KAAAa,EAAAf,KAAA,EAIFL,EAASQ,OAJP,cAIpBhE,EAJoB4E,EAAAb,KAAAa,EAAAX,OAAA,SAKnBjE,GALmB,wBAAA4E,EAAAV,SAAAS,MAAH,yBAAAD,EAAAP,MAAAnG,KAAAoG,YAAA,GC+FVS,oNApGb7C,MAAQ,CACN8C,eAAgB,GAChBC,iBAAkB,YAClB7D,QAAS,GACTmB,SAAU,GACVtC,UAAW,MAGbiF,uCAAoB,SAAAzB,IAAA,IAAA0B,EAAA5C,EAAAtC,EAAA,OAAAsD,EAAAlF,EAAAuF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACOX,IADP,cACZ+B,EADYtB,EAAAI,KAAAJ,EAAAE,KAAA,EAEKQ,IAFL,cAEZhC,EAFYsB,EAAAI,KAAAJ,EAAAE,KAAA,EAGMY,IAHN,cAGZ1E,EAHY4D,EAAAI,KAAAJ,EAAAE,KAAA,GAKZ1B,EAAK+C,eAAeD,EAAY5C,EAAUtC,GAL9B,yBAAA4D,EAAAO,SAAAX,QAQpB2B,eAAiB,SAACD,EAAY5C,EAAUtC,GACtC,IAAMmB,EAAU,GAEhB+D,EAAWE,QAAQ,SAAAzD,GACjB,IAAMhB,EAAQ2B,EAASC,OACrB,SAAA8C,GAAQ,OAAIA,EAAS7C,aAAeb,EAAOnB,OAEvCF,EAAS8B,EAAKkD,mBAAmB3E,GACjCV,EAAYmC,EAAKmD,kBAAkB5D,EAAOnB,KAAMR,GAChDS,EAAa2B,EAAKoD,mBAAmBvF,GACrCS,EAAaJ,EAASG,EAE5BU,EAAQ6B,KAAK,CACXxC,KAAMmB,EAAOnB,KACbG,QACAL,SACAL,YACAQ,aACAC,iBAGJ0B,EAAKC,SAAS,CACZlB,QAASiB,EAAKqD,WAAWtE,GACzBmB,SAAUF,EAAKqD,WAAWnD,GAC1BtC,iBAIJsF,mBAAqB,SAAA3E,GAAK,OAAIA,EAAMmC,OAAO,SAAC1E,EAAGkD,GAAJ,OAAUlD,EAAIkD,EAAEhB,QAAQ,MAEnEiF,kBAAoB,SAAC/E,EAAMR,GAAP,OAClBA,EAAUuC,OAAO,SAAApC,GAAK,OAAIA,EAAMK,OAASA,OAE3CgF,mBAAqB,SAAAvF,GAAS,OAAImC,EAAKkD,mBAAmBrF,MAE1DgB,kBAAoB,SAAA8D,GAClB3C,EAAKC,SAAS,CAAE0C,iBAAgBC,iBAAkB,mBAGpDlG,gBAAkB,WAChBsD,EAAKC,SAAS,CAAE0C,eAAgB,GAAIC,iBAAkB,iBAGxDS,WAAa,SAAAC,GAAK,OAChBA,EAAMrE,KAAK,SAACjD,EAAGkD,GACb,OAAIlD,EAAEoC,KAAOc,EAAEd,MAAc,EACzBpC,EAAEoC,KAAOc,EAAEd,KAAa,OAA5B,6EAGK,IACCmF,EAAgB1H,KAAKC,MAArByH,YADDC,EAQH3H,KAAKgE,MALP+C,EAHKY,EAGLZ,iBACAD,EAJKa,EAILb,eACA5D,EALKyE,EAKLzE,QACAmB,EANKsD,EAMLtD,SACAtC,EAPK4F,EAOL5F,UAEInB,EAAqBsC,EAAQ0E,KACjC,SAAAlE,GAAM,OAAIA,EAAOnB,OAASuE,IAE5B,OACE5G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACI,cAAhBqH,GAAoD,gBAArBX,GAC9B7G,EAAAC,EAAAC,cAACyH,EAAD,CACEjH,mBAAoBA,EACpBC,gBAAiBb,KAAKa,kBAGT,cAAhB6G,GAAoD,cAArBX,GAC9B7G,EAAAC,EAAAC,cAAC0H,EAAD,CACE5E,QAASA,EACTF,kBAAmBhD,KAAKgD,oBAGX,UAAhB0E,GAA2BxH,EAAAC,EAAAC,cAAC2H,EAAD,CAAO1D,SAAUA,IAC5B,UAAhBqD,GACCxH,EAAAC,EAAAC,cAAC4H,EAAD,CAAW9E,QAASA,EAASnB,UAAWA,YA9F3BtB,cCcRwH,oNAlBbjE,MAAQ,CACN0D,YAAa,eAGf3H,kBAAoB,SAAA2H,GAClBvD,EAAKC,SAAS,CAAEsD,yFAIhB,OACExH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC8H,EAAD,CAAQnI,kBAAmBC,KAAKD,oBAChCG,EAAAC,EAAAC,cAAC+H,EAAD,CAAUT,YAAa1H,KAAKgE,MAAM0D,sBAbxBjH,cCOE2H,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxI,EAAAC,EAAAC,cAACuI,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.68ee8b3a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/player.f29f6e97.svg\";","module.exports = __webpack_public_path__ + \"static/media/todd.401918f0.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.a21746f5.gif\";","module.exports = __webpack_public_path__ + \"static/media/Chris.63618149.jpg\";","import React, { Component } from \"react\";\nimport toddImg from \"../../images/todd.png\";\nimport \"./Header.css\";\n\nclass Header extends Component {\n  render() {\n    const { handleNavBarClick } = this.props;\n    return (\n      <div className=\"Header\">\n        <div className=\"header-logo\">\n          <h1>\n            LONG SH\n            <img className=\"todd-img\" src={toddImg} />T LEAGUE\n          </h1>\n        </div>\n\n        <div className=\"header-nav\">\n          <h3\n            className=\"header-nav-link\"\n            onClick={() => handleNavBarClick(\"standings\")}\n          >\n            standings\n          </h3>\n          <h3\n            className=\"header-nav-link\"\n            onClick={() => handleNavBarClick(\"teams\")}\n          >\n            teams\n          </h3>\n          <h3\n            className=\"header-nav-link\"\n            onClick={() => handleNavBarClick(\"bonus\")}\n          >\n            bonus\n          </h3>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Dan from \"../../images/player.svg\";\nimport Bmase from \"../../images/player.svg\";\nimport Scott from \"../../images/player.svg\";\nimport Kristin from \"../../images/player.svg\";\nimport Alex from \"../../images/player.svg\";\nimport Doherty from \"../../images/player.svg\";\nimport Kevin from \"../../images/player.svg\";\nimport Todd from \"../../images/todd.png\";\nimport Laura from \"../../images/player.svg\";\nimport Brent from \"../../images/player.svg\";\nimport Reed from \"../../images/player.svg\";\nimport Justin from \"../../images/player.svg\";\nimport Brewers from \"../../images/player.svg\";\nimport Matt from \"../../images/player.svg\";\nimport Fraske from \"../../images/player.svg\";\nimport Chris from \"../../images/Chris.jpg\";\nimport \"./PlayerInfo.css\";\n\nclass PlayerInfo extends Component {\n  render() {\n    const { selectedPlayerData, handleBackClick } = this.props;\n    const playerPics = {\n      Dan,\n      Bmase,\n      Scott,\n      Kristin,\n      Alex,\n      Doherty,\n      Kevin,\n      Todd,\n      Laura,\n      Brent,\n      Reed,\n      Justin,\n      Brewers,\n      Matt,\n      Fraske,\n      Chris\n    };\n\n    let bonusList = selectedPlayerData.bonusData.map(bonus => (\n      <h3 key={bonus.description}>\n        {bonus.points} - {bonus.description}\n      </h3>\n    ));\n\n    if (!bonusList.length) {\n      bonusList = \"-none-\";\n    }\n\n    return (\n      <div className=\"PlayerInfo\">\n        <button className=\"back-btn\" onClick={handleBackClick}>\n          X\n        </button>\n        <h1 className=\"player-info-name\">{selectedPlayerData.name}</h1>\n        <img\n          className=\"player-info-pic\"\n          src={playerPics[selectedPlayerData.name]}\n        />\n        <div className=\"player-info-totals\">\n          <h5>\n            points\n            <br />{\" \"}\n            <span className=\"player-info-num\">{selectedPlayerData.points}</span>\n          </h5>\n          <h5>\n            bonus\n            <br />{\" \"}\n            <span className=\"player-info-num\">\n              {selectedPlayerData.bonusTotal}\n            </span>\n          </h5>\n          <h5>\n            total\n            <br />{\" \"}\n            <span className=\"player-info-num\">\n              {selectedPlayerData.pointTotal}\n            </span>\n          </h5>\n        </div>\n        <div className=\"player-info-teams\">\n          {selectedPlayerData.teams.map(team => (\n            <h5\n              className={team.is_eliminated ? \"eliminated\" : \"\"}\n              key={team.name}\n            >\n              {`${team.name} (${team.points})`}\n            </h5>\n          ))}\n        </div>\n        <div className=\"player-info-bonus\">\n          <h3 className=\"player-info-bonus-title\">bonus</h3>\n          {bonusList}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PlayerInfo;\n","import React, { Component } from \"react\";\nimport Dan from \"../../images/player.svg\";\nimport Bmase from \"../../images/player.svg\";\nimport Scott from \"../../images/player.svg\";\nimport Kristin from \"../../images/player.svg\";\nimport Alex from \"../../images/player.svg\";\nimport Doherty from \"../../images/player.svg\";\nimport Kevin from \"../../images/player.svg\";\nimport Todd from \"../../images/todd.png\";\nimport Laura from \"../../images/player.svg\";\nimport Brent from \"../../images/player.svg\";\nimport Reed from \"../../images/player.svg\";\nimport Justin from \"../../images/player.svg\";\nimport Brewers from \"../../images/player.svg\";\nimport Matt from \"../../images/player.svg\";\nimport Fraske from \"../../images/player.svg\";\nimport Chris from \"../../images/Chris.jpg\";\nimport \"./Player.css\";\n\nclass Player extends Component {\n  render() {\n    const { name, pointTotal, rank, handlePlayerClick } = this.props;\n    const playerPics = {\n      Dan,\n      Bmase,\n      Scott,\n      Kristin,\n      Alex,\n      Doherty,\n      Kevin,\n      Todd,\n      Laura,\n      Brent,\n      Reed,\n      Justin,\n      Brewers,\n      Matt,\n      Fraske,\n      Chris\n    };\n\n    return (\n      <div className=\"Player\" onClick={() => handlePlayerClick(name)}>\n        <h3 className=\"player-rank\">{rank}</h3>\n        <h3 className=\"player-name\">{name}</h3>\n        <h3 className=\"player-points\">{pointTotal}</h3>\n        <div className=\"player-pic-wrapper\">\n          <img className=\"player-pic\" src={playerPics[name]} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Player;\n","import React, { Component } from \"react\";\nimport Player from \"../Player\";\nimport loadingImg from \"../../images/loading.gif\";\nimport \"./Standings.css\";\n\nclass Standings extends Component {\n  render() {\n    const { players, handlePlayerClick } = this.props;\n\n    const playerListSorted = players.sort((a, b) => {\n      if (a.pointTotal > b.pointTotal) return -1;\n      if (a.pointTotal < b.pointTotal) return 1;\n    });\n\n    const loadingGif = <img className=\"loading-img\" src={loadingImg} />;\n\n    let counter = 1;\n    const formattedPlayers = playerListSorted.map((player, i) => {\n      i > 0 && player.pointTotal === playerListSorted[i - 1].pointTotal\n        ? counter++\n        : (counter = 0);\n\n      return (\n        <Player\n          handlePlayerClick={handlePlayerClick}\n          {...player}\n          rank={i + 1 - counter}\n          key={player.name}\n        />\n      );\n    });\n\n    if (!players.length) {\n      return loadingGif;\n    } else {\n      return (\n        <div className=\"Standings\">\n          <div className=\"current-standings-header\">\n            <h5>rank</h5>\n            <h5>name</h5>\n            <h5 className=\"current-standings-points\">points</h5>\n          </div>\n          {formattedPlayers}\n        </div>\n      );\n    }\n  }\n}\n\nexport default Standings;\n","import React, { Component } from \"react\";\nimport loadingImg from \"../../images/loading.gif\";\nimport \"./Teams.css\";\n\nclass Teams extends Component {\n  state = {\n    display: \"show all\"\n  };\n\n  toggleTeamDisplay = () => {\n    let { display } = this.state;\n    display === \"show all\" ? (display = \"still alive\") : (display = \"show all\");\n    this.setState({ display });\n  };\n\n  render() {\n    let { teamList } = this.props;\n    const { display } = this.state;\n    const loadingGif = <img className=\"loading-img\" src={loadingImg} />;\n\n    if (display === \"still alive\") {\n      teamList = teamList.filter(team => !team.is_eliminated);\n    }\n\n    const teams = teamList.map(team => (\n      <div\n        className={\"team\".concat(team.is_eliminated ? \" red\" : \" green\")}\n        key={team.name}\n      >\n        <h3>\n          {team.name} - {team.points}\n        </h3>\n        <h5>{team.drafted_by}</h5>\n      </div>\n    ));\n\n    if (!teamList.length) {\n      return loadingGif;\n    } else {\n      return (\n        <div className=\"Teams\">\n          <button className=\"teams-toggle-btn\" onClick={this.toggleTeamDisplay}>\n            {display}\n          </button>\n          <br />\n          <div className=\"teams-wrapper\">{teams}</div>;\n        </div>\n      );\n    }\n  }\n}\n\nexport default Teams;\n","import React, { Component } from \"react\";\nimport \"./Bonus.css\";\n\nclass Bonus extends Component {\n  render() {\n    const { bonusList } = this.props;\n    return (\n      <div className=\"Bonus\">\n        <h5>{`${bonusList.description} (${bonusList.points}pt)`}</h5>\n      </div>\n    );\n  }\n}\n\nexport default Bonus;\n","import React, { Component } from \"react\";\nimport Bonus from \"../Bonus\";\nimport loadingImg from \"../../images/loading.gif\";\nimport \"./BonusPage.css\";\n\nclass BonusPage extends Component {\n  render() {\n    const { players, bonusList } = this.props;\n    const loadingGif = <img className=\"loading-img\" src={loadingImg} />;\n\n    const playersDisplayed = players.map(player => {\n      const bonusListDisplayed = [];\n\n      const playerBonusTotal = bonusList.reduce((total, bonus) => {\n        if (bonus.name === player.name) {\n          bonusListDisplayed.push(<Bonus bonusList={bonus} key={bonus.id} />);\n          total += bonus.points;\n        }\n        return +total;\n      }, 0);\n      return (\n        <div className=\"bonus-player\" key={player.name}>\n          <h3 className=\"bonus-player-name\">{`${\n            player.name\n          } - ${playerBonusTotal}`}</h3>\n          <div>{bonusListDisplayed}</div>\n        </div>\n      );\n    });\n\n    if (!players.length) {\n      return loadingGif;\n    } else {\n      return <div className=\"BonusPage\">{playersDisplayed}</div>;\n    }\n  }\n}\n\nexport default BonusPage;\n","export const getPlayers = async () => {\n  const response = await fetch(\n    \"https://long-shot-league-be.herokuapp.com/api/v1/longshotleague/players\"\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const getTeams = async () => {\n  const response = await fetch(\n    \"https://long-shot-league-be.herokuapp.com/api/v1/longshotleague/teams\"\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const getBonusData = async () => {\n  const response = await fetch(\n    \"https://long-shot-league-be.herokuapp.com/api/v1/longshotleague/bonus\"\n  );\n  const bonusData = await response.json();\n  return bonusData;\n};\n","import React, { Component } from \"react\";\nimport PlayerInfo from \"../PlayerInfo\";\nimport Standings from \"../Standings\";\nimport Teams from \"../Teams\";\nimport BonusPage from \"../BonusPage\";\nimport { getPlayers } from \"../../apiCalls\";\nimport { getTeams } from \"../../apiCalls\";\nimport { getBonusData } from \"../../apiCalls\";\nimport \"./MainPage.css\";\n\nclass MainPage extends Component {\n  state = {\n    selectedPlayer: \"\",\n    standingsDisplay: \"standings\",\n    players: [],\n    teamList: [],\n    bonusList: []\n  };\n\n  componentDidMount = async () => {\n    const playerList = await getPlayers();\n    const teamList = await getTeams();\n    const bonusList = await getBonusData();\n\n    await this.loadPlayerData(playerList, teamList, bonusList);\n  };\n\n  loadPlayerData = (playerList, teamList, bonusList) => {\n    const players = [];\n\n    playerList.forEach(player => {\n      const teams = teamList.filter(\n        listTeam => listTeam.drafted_by === player.name\n      );\n      const points = this.generatePointTotal(teams);\n      const bonusData = this.generateBonusData(player.name, bonusList);\n      const bonusTotal = this.generateBonusTotal(bonusData);\n      const pointTotal = points + bonusTotal;\n\n      players.push({\n        name: player.name,\n        teams,\n        points,\n        bonusData,\n        bonusTotal,\n        pointTotal\n      });\n    });\n    this.setState({\n      players: this.sortByName(players),\n      teamList: this.sortByName(teamList),\n      bonusList\n    });\n  };\n\n  generatePointTotal = teams => teams.reduce((a, b) => a + b.points, 0);\n\n  generateBonusData = (name, bonusList) =>\n    bonusList.filter(bonus => bonus.name === name);\n\n  generateBonusTotal = bonusData => this.generatePointTotal(bonusData);\n\n  handlePlayerClick = selectedPlayer => {\n    this.setState({ selectedPlayer, standingsDisplay: \"player info\" });\n  };\n\n  handleBackClick = () => {\n    this.setState({ selectedPlayer: \"\", standingsDisplay: \"standings\" });\n  };\n\n  sortByName = input =>\n    input.sort((a, b) => {\n      if (a.name < b.name) return -1;\n      if (a.name > b.name) return 1;\n    });\n\n  render() {\n    const { pageDisplay } = this.props;\n    const {\n      standingsDisplay,\n      selectedPlayer,\n      players,\n      teamList,\n      bonusList\n    } = this.state;\n    const selectedPlayerData = players.find(\n      player => player.name === selectedPlayer\n    );\n    return (\n      <div className=\"MainPage\">\n        {pageDisplay === \"standings\" && standingsDisplay === \"player info\" && (\n          <PlayerInfo\n            selectedPlayerData={selectedPlayerData}\n            handleBackClick={this.handleBackClick}\n          />\n        )}\n        {pageDisplay === \"standings\" && standingsDisplay === \"standings\" && (\n          <Standings\n            players={players}\n            handlePlayerClick={this.handlePlayerClick}\n          />\n        )}\n        {pageDisplay === \"teams\" && <Teams teamList={teamList} />}\n        {pageDisplay === \"bonus\" && (\n          <BonusPage players={players} bonusList={bonusList} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","import React, { Component } from \"react\";\nimport Header from \"../Header/\";\nimport MainPage from \"../MainPage/\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    pageDisplay: \"standings\"\n  };\n\n  handleNavBarClick = pageDisplay => {\n    this.setState({ pageDisplay });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header handleNavBarClick={this.handleNavBarClick} />\n        <MainPage pageDisplay={this.state.pageDisplay} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}